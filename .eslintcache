[{"/Users/levi/git/testapp/src/index.js":"1","/Users/levi/git/testapp/src/ImageUpload.jsx":"2","/Users/levi/git/testapp/src/App.js":"3","/Users/levi/git/testapp/src/VideoScan.jsx":"4"},{"size":219,"mtime":1611383268512,"results":"5","hashOfConfig":"6"},{"size":1133,"mtime":1611391223793,"results":"7","hashOfConfig":"6"},{"size":1296,"mtime":1611385956204,"results":"8","hashOfConfig":"6"},{"size":1472,"mtime":1611383268512,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19vl2pd",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/levi/git/testapp/src/index.js",[],"/Users/levi/git/testapp/src/ImageUpload.jsx",["20","21"],"import React, { Component } from 'react';\nimport { BrowserMultiFormatReader, DecodeHintType, BarcodeFormat } from '@zxing/library';\n\nexport default class ImageUploader extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    scan(file) {\n        const reader = new FileReader();\n        reader.onload = (fileUpload) => {\n            console.log('FILE', fileUpload)\n            const hints = new Map();\n            hints.set(DecodeHintType.PURE_BARCODE);\n            const decoder = new BrowserMultiFormatReader(hints);\n            decoder.decodeFromImage(undefined, fileUpload.target.result).then((decodeResult) => {\n                this.props.updateDetectedCode(decodeResult.getText());\n            }).catch((err) => {\n                console.warn(err);\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    type='file'\n                    onChange={(event) => {\n                        this.scan(event.target.files[0]);\n                    }}\n                /> \n            </div>\n        );\n    }\n}\n","/Users/levi/git/testapp/src/App.js",["22"],"import logo from './logo.svg';\nimport './App.css';\nimport ImageUpload from './ImageUpload';\nimport VideoScan from './VideoScan';\nimport { Component } from 'react';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageSelected: true,\n      detectedCode: undefined\n    }\n  }\n\n  updateDetectedCode(detectedCode) {\n    this.setState({ detectedCode });\n    setTimeout(() => {this.setState({ detectedCode: undefined })}, 5000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{padding: 50}}>\n          <button onClick={() => {\n            this.setState({ imageSelected: !this.state.imageSelected, detectedCode: undefined })\n          }}\n          >\n            Toggle Selection\n          </button>\n        </div>\n        {this.state.imageSelected ? (\n          <ImageUpload\n            updateDetectedCode={this.updateDetectedCode.bind(this)}\n          />\n        ) : (\n          <VideoScan\n            updateDetectedCode={this.updateDetectedCode.bind(this)}\n          />\n        )}\n\n        {this.state.detectedCode && (\n            <div style={{padding: 50}}>\n                <h1>Detected Code:</h1>\n                <p>${this.state.detectedCode}</p>\n            </div>\n        )}\n      </div>\n    )\n  }\n}\n","/Users/levi/git/testapp/src/VideoScan.jsx",[],{"ruleId":"23","severity":1,"message":"24","line":2,"column":52,"nodeType":"25","messageId":"26","endLine":2,"endColumn":65},{"ruleId":"27","severity":1,"message":"28","line":5,"column":5,"nodeType":"29","messageId":"30","endLine":7,"endColumn":6},{"ruleId":"23","severity":1,"message":"31","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},"no-unused-vars","'BarcodeFormat' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'logo' is defined but never used."]